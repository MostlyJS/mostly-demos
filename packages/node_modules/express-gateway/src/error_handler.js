import { isEmpty, map } from 'lodash';
import path from 'path';

const defaults = {
  html: {
    401: path.resolve(__dirname, '/../public', '401.html'),
    404: path.resolve(__dirname, '/../public', '404.html'),
    default: path.resolve(__dirname, '/../public', 'index.html')
  }
};

export default function (options) {
  options = Object.assign({}, defaults, options);

  return function(error, req, res, next) {
    
    error = error || {};

    // error status
    res.statusCode = res.statusCode || 500;

    // don't show error stack in production
    var errors = [];
    if (process.env.NODE_ENV !== 'production') {
      errors = error.errors;
      if (isEmpty(errors)) {
        errors = [error.cause || error.stack];
      }
    }

    // code from FeathersError
    if (error.code && !isNaN(parseInt(error.code, 10))) {
      error.status = parseInt(error.code, 10);
    }
    if (error.status && error.status >= 200 && error.status < 600) {
      res.statusCode = error.status;
    }

    var jsonFormatter = function(err, req, res) {
      var message = err.name + ' ' + err.message || 'Unkown Error';
      if (errors) {
        message += ": " + map(errors, 'message').join(', ');
      }
      res.set('Content-Type', 'application/json');
      res.send({
        status: err.status || -1,
        message: message,
        metadata: {},
        errors: errors,
        data: null
      });
    };

    var htmlFormatter = function () {
      var file = options.html[error.status];

      if (!file) {
        file = options.html.default;
      }

      res.set('Content-Type', 'text/html');
      res.sendFile(file);
    };

    var contentType = req.headers['content-type'] || '';
    var accepts = req.headers.accept || '';

    // by default just send back json
    if (options.html && (contentType.indexOf('html') !== -1 || accepts.indexOf('html') !== -1)) {
      return htmlFormatter(error, req, res, next);
    } else {
      return jsonFormatter(error, req, res, next);
    }
  };
}